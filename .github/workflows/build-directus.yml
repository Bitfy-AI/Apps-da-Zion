name: 📦 Build Directus

on:
  workflow_call:
    inputs:
      check_version:
        required: false
        type: boolean
        default: true

env:
  IMAGE_NAME: iazion/directus  # ✅ Certifique-se que está definido
  SERVICE: directus

jobs:
  check-and-build:
    name: Directus Build
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
      
      - name: 🔍 Verificar versão
        id: version
        run: |
          echo "🔍 Verificando versão do Directus..."
          
          # Buscar última versão
          LATEST=$(curl -s https://api.github.com/repos/directus/directus/releases/latest | jq -r .tag_name || echo "")
          
          # Limpar o prefixo 'v'
          LATEST_CLEAN=${LATEST#v}
          
          # Fallback se vazio
          if [ -z "$LATEST_CLEAN" ]; then
            LATEST_CLEAN="10.10.0"  # Versão fallback conhecida
            echo "⚠️ Usando versão fallback: $LATEST_CLEAN"
          else
            echo "✅ Versão encontrada: $LATEST_CLEAN"
          fi
          
          # Sempre definir a versão
          echo "version=${LATEST_CLEAN}" >> $GITHUB_OUTPUT
          
          # Verificar se precisa build
          if [[ "${{ inputs.check_version }}" == "true" ]]; then
            TAGS=$(curl -s "https://hub.docker.com/v2/repositories/${{ env.IMAGE_NAME }}/tags?page_size=100" | jq -r '.results[].name' 2>/dev/null || echo "")
            
            if echo "$TAGS" | grep -q "^${LATEST_CLEAN}$"; then
              echo "✅ Versão ${LATEST_CLEAN} já existe"
              echo "skip=true" >> $GITHUB_OUTPUT
            else
              echo "🆕 Nova versão: ${LATEST_CLEAN}"
              echo "skip=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi
      
      - name: 🔧 Setup Docker Buildx
        if: steps.version.outputs.skip != 'true'
        uses: docker/setup-buildx-action@v3
      
      - name: 🔐 Login Docker Hub
        if: steps.version.outputs.skip != 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: 🚀 Build e Push
        if: steps.version.outputs.skip != 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./directus
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          cache-from: type=gha,scope=directus
          cache-to: type=gha,scope=directus,mode=max
          build-args: |
            DIRECTUS_VERSION=${{ steps.version.outputs.version }}
            BUILD_DATE=${{ github.run_id }}
